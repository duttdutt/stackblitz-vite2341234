{"code":"function doStuff(values: readonly string[]) {\n  // We can read from 'values'...\n  const copy = values.slice();\n  console.log(`The first value is ${values[0]}`);\n  // ...but we can't mutate 'values'.\n  // @error: Custom error message\n  values.push(\"hello!\");\n}","nodes":[{"type":"highlight","start":9,"length":7,"line":0,"character":9},{"type":"hover","text":"function doStuff(values: readonly string[]): void","start":9,"length":7,"target":"doStuff","line":0,"character":9},{"type":"hover","text":"(parameter) values: readonly string[]","start":17,"length":6,"target":"values","line":0,"character":17},{"type":"hover","text":"const copy: string[]","start":88,"length":4,"target":"copy","line":2,"character":8},{"type":"hover","text":"(parameter) values: readonly string[]","start":95,"length":6,"target":"values","line":2,"character":15},{"type":"hover","text":"(method) ReadonlyArray<string>.slice(start?: number, end?: number): string[]","docs":"Returns a section of an array.","tags":[["param","start The beginning of the specified portion of the array."],["param","end The end of the specified portion of the array. This is exclusive of the element at the index 'end'."]],"start":102,"length":5,"target":"slice","line":2,"character":22},{"type":"hover","text":"var console: Console","start":113,"length":7,"target":"console","line":3,"character":2},{"type":"hover","text":"(method) Console.log(...data: any[]): void","docs":"[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/log_static)","start":121,"length":3,"target":"log","line":3,"character":10},{"type":"hover","text":"(parameter) values: readonly string[]","start":147,"length":6,"target":"values","line":3,"character":36},{"type":"hover","text":"(parameter) values: readonly string[]","start":235,"length":6,"target":"values","line":6,"character":2},{"type":"query","text":"(parameter) values: readonly string[]","start":235,"length":6,"target":"values","line":6,"character":2},{"type":"error","start":242,"length":4,"code":2339,"filename":"index.ts","id":"err-2339-276-4","text":"Property 'push' does not exist on type 'readonly string[]'.","level":"error","line":6,"character":9},{"type":"hover","text":"any","start":242,"length":4,"target":"push","line":6,"character":9}],"meta":{"extension":"ts","compilerOptions":{"strict":true,"module":99,"target":99,"allowJs":true,"skipDefaultLibCheck":true,"skipLibCheck":true,"moduleDetection":3,"baseUrl":"/Users/ynk/src/projects/docs/","moduleResolution":100},"handbookOptions":{"errors":[2339],"noErrors":false,"noErrorsCutted":false,"noErrorValidation":false,"noStaticSemanticInfo":false,"showEmit":false,"keepNotations":false},"removals":[[292,300],[63,80],[0,17]],"flagNotations":[{"type":"handbookOptions","name":"errors","value":[2339],"start":0,"end":17}],"virtualFiles":[{"offset":0,"filename":"index.ts","filepath":"/Users/ynk/src/projects/docs/index.ts","content":"// @errors: 2339\nfunction doStuff(values: readonly string[]) {\n  //     ^^^^^^^\n  // We can read from 'values'...\n  const copy = values.slice();\n  console.log(`The first value is ${values[0]}`);\n  // ...but we can't mutate 'values'.\n  // @error: Custom error message\n  values.push(\"hello!\");\n  // ^?\n}","extension":"ts","supportLsp":true}],"positionQueries":[272],"positionCompletions":[],"positionHighlights":[[26,33,null]]},"queries":[{"type":"query","text":"(parameter) values: readonly string[]","start":235,"length":6,"target":"values","line":6,"character":2}],"completions":[],"errors":[{"type":"error","start":242,"length":4,"code":2339,"filename":"index.ts","id":"err-2339-276-4","text":"Property 'push' does not exist on type 'readonly string[]'.","level":"error","line":6,"character":9}],"highlights":[{"type":"highlight","start":9,"length":7,"line":0,"character":9}],"hovers":[{"type":"hover","text":"function doStuff(values: readonly string[]): void","start":9,"length":7,"target":"doStuff","line":0,"character":9},{"type":"hover","text":"(parameter) values: readonly string[]","start":17,"length":6,"target":"values","line":0,"character":17},{"type":"hover","text":"const copy: string[]","start":88,"length":4,"target":"copy","line":2,"character":8},{"type":"hover","text":"(parameter) values: readonly string[]","start":95,"length":6,"target":"values","line":2,"character":15},{"type":"hover","text":"(method) ReadonlyArray<string>.slice(start?: number, end?: number): string[]","docs":"Returns a section of an array.","tags":[["param","start The beginning of the specified portion of the array."],["param","end The end of the specified portion of the array. This is exclusive of the element at the index 'end'."]],"start":102,"length":5,"target":"slice","line":2,"character":22},{"type":"hover","text":"var console: Console","start":113,"length":7,"target":"console","line":3,"character":2},{"type":"hover","text":"(method) Console.log(...data: any[]): void","docs":"[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/log_static)","start":121,"length":3,"target":"log","line":3,"character":10},{"type":"hover","text":"(parameter) values: readonly string[]","start":147,"length":6,"target":"values","line":3,"character":36},{"type":"hover","text":"(parameter) values: readonly string[]","start":235,"length":6,"target":"values","line":6,"character":2},{"type":"hover","text":"any","start":242,"length":4,"target":"push","line":6,"character":9}],"tags":[]}